const passport= require('passport');
const googleStrategy=  require( 'passport-google-oauth2').Strategy;
const crypto = require('crypto');
const User= require('../models/user');

// tell passport to use new google starategy for login , menation object of google startegy create obj of google 
passport.use(new googleStrategy({
    clientID : "1049303480476-mb1jg0nsqoii2n12vf5qjfss74j0n5u6.apps.googleusercontent.com",
    clientSecret : "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",
    callbackURL : "http://localhost:8000/users/auth/google/callback",
    },

    //access token generated by the google, refresh token if the access token expired then google generates this
    //lot of things can be done using the accesstoken has diff permissions which are given when it;s created
    // find user, 
    function(accessToken, refreshToken, profile, done){
        User.findOne({email: profile.emails[0].value}).exec(function(err,user){
            if(err){console.log('error in google startegy-passport', err); return;}
            console.log(profile);

            if(user){
                //if found set user as req.user
                return done(null,user);
            }else{
                //if not found, create user and set it as req.user     
                User.create({
                    name: profile.displayName,
                    email: profile.emails[0].value,
                    //for generating randwom password
                    passport: crypto.randomBytes(20).toString('hex')
                }, function(err, user){
                    if(err){
                        console.log("eError in creating user");
                        return done(null, user);
                    }
                });
            }
        
        });
    }
));


module.exports = passport;